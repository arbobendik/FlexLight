let TypeScriptAssign=(e,t,i)=>e[t]=i;class ConfigElement extends HTMLElement{constructor(){super(),Object.defineProperty(this,"_name",{enumerable:!0,configurable:!0,writable:!0,value:""}),Object.defineProperty(this,"_object",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_key",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_value",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_type",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_options",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"label",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"input",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"select",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_hook",{enumerable:!0,configurable:!0,writable:!0,value:()=>{}}),this.label=document.createElement("label")}connectedCallback(){this.appendChild(this.label)}createInput(){if(this._type){let t=document.createElement("input");t.type=this._type,t.addEventListener("change",e=>{if(e.target instanceof HTMLInputElement)switch(t.type){case"checkbox":this._value=t.checked,this._hook(this.name??"",this._value);break;case"range":this._value=t.value,this._hook(this.name??"",this._value)}}),this.input=t,this.input.name=this._name,console.log(this._name,this._value),this.input.value=this._value?.toString()??"",this.label.appendChild(this.input)}}createSelect(){if(this._type&&this._options){let t=document.createElement("select");for(var e of this._options){var i=document.createElement("option");i.value=e,i.textContent=e,t.appendChild(i)}t.addEventListener("change",e=>{e.target instanceof HTMLSelectElement&&(this._value=t.value,this._hook(this.name??"",this._value))}),this.select=t,this.select.name=this._name,this.select.value=this._value?.toString()??"",this.label.appendChild(this.select)}}attemptRender(){if(this._type)switch(this.label.replaceChildren(),this.label.textContent=this._name,this.label.htmlFor=this._name,this._type){case"checkbox":case"range":this.createInput();break;case"select":this.createSelect()}}set hook(e){this._hook=e}get hook(){return this._hook}set min(e){this.input&&(this.input.min=e)}get min(){return this.input?.min}set max(e){this.input&&(this.input.max=e)}get max(){return this.input?.max}set step(e){this.input&&(this.input.step=e)}get step(){return this.input?.step}set options(e){this._options=e,this.attemptRender()}get options(){return this._options}set object(e){this._object=e}get object(){return this._object}set key(e){this._key=e}get key(){return this._key}get value(){return this._value}set value(e){this._value=e,this.input&&(this.input.value=(e??"").toString()),this.select&&(this.select.value=(e??"").toString()),this._object&&this._key&&e&&TypeScriptAssign(this._object,this._key,e),this.input&&console.log(this._name,this.input.value,e),this.select&&console.log(this._name,this.select.value,e)}get type(){return this._type}set type(e){this._type=e,this.attemptRender()}get name(){return this._name}set name(e){this._name=e,this.attemptRender()}}customElements.define("config-element",ConfigElement);class ConfigForm{constructor(e,t,i=()=>{}){Object.defineProperty(this,"_form",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_config",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_hook",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this._form=e,this._config=t,this._hook=i}addCheckbox(e,t,i=void 0){var n=document.createElement("config-element");n.object=this._config,n.key=t,n.name=e,n.type="checkbox",n.hook=this._hook,i&&(n.value=i),this._form.appendChild(n)}addSlider(e,t,i,n,s,a=void 0){var o=document.createElement("config-element");o.object=this._config,o.key=t,o.name=e,o.type="range",o.min=i.toString(),o.max=n.toString(),o.step=s.toString(),o.hook=this._hook,a&&(o.value=a),this._form.appendChild(o)}addSelect(e,t,i,n=void 0){var s=document.createElement("config-element");s.object=this._config,s.key=t,s.name=e,s.type="select",s.options=i,s.hook=this._hook,n&&(s.value=n),this._form.appendChild(s)}}export{TypeScriptAssign,ConfigElement,ConfigForm};